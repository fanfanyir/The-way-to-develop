1、JavaScript 的词法作用域是基于编译器语义的：
        只由函数被声明时所处的位置决定
        欺骗词法：eval with  在运行时修改已经存在的词法作用域  创建新的词法作用域

        动态作用域：不关心函数和作用域是如何声明的，只关心它们从何处调用，作用域链是基于调用栈的，而不是代码中的作用域嵌套。
      区别： 词法作用域是在写代码或者说定义时确定的--关心何处声明，而动态作用域是在运行时确定的---关心何处调用（this也是）

2、词法作用域和作为值的函数这两者的直接结果之一就是闭包
        当函数可以记住并访问所在的词法作用域时，即使函数是在当前词法作用域之外执行，这时就产生了闭包

3、this 绑定的四条基本原则：默认绑定、隐式绑定、显式绑定、new 绑定
  -----为什么用 this：this提供了一种更优雅的方式来隐式"传递"一个对象引用，可以将API 设计得更加简洁并且易于复用
  -----this是什么：一个函数被调用时会创建一个活动记录，这个记录会包含函数在哪里被调用，函数的调用方式，传入的参数等信息，this是记录的一个属性
  -----顺序：new > call/apply/bind  >  隐式绑定(在某个上下文对象中调用) > 默认绑定(一般是绑定到 window 严格模式下是 undefined)
4、“行为委托” 设计模式
  
5、连接到其他对象的对象

6、JavaScript 的内置类型：undefined,null,boolean,string,number,symbol,object

7、如何正确安全地使用类型间强制转换

8、JavaScript 语法/句法中的微妙细节

9、promise 是什么，为什么能够解决“回调地狱”的问题

10、如何用生成器来使得异步代码更加清晰

11、JavaScript 程序和具体运算的深度优化由哪些方面构成
